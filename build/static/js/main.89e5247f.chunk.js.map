{"version":3,"sources":["Model.js","App.js","index.js"],"names":["Model","props","useLoader","GLTFLoader","draco","nodes","materials","dispose","rotation","Math","PI","scale","geometry","Circle011_EyeFire_0","attach","color","material","SerpentBake","Circle011_SerpentBake_0","material-metalness","position","Hide003_EyeFire_0","Boat2Bake","Hide003_Boat2Bake_0","Keel002_EyeFire_0","Boat1Bake","Keel002_Boat1Bake_0","RockBake","Rock021_RockBake_0","Objects","VikingShipObjects001_Objects_0","VikingShipObjects001_Objects_0001","Rig","children","outer","useRef","inner","useFrame","clock","current","y","lerp","sin","getElapsedTime","z","ref","App","concurrent","gl","alpha","camera","fov","onCreated","lookAt","setClearColor","toneMapping","THREE","args","intensity","fallback","center","onPointerOver","e","stopPropagation","transparent","opacity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89e5247f.chunk.js","sourcesContent":["/*\nauto-generated by: https://github.com/react-spring/gltfjsx\nauthor: MrEmjeR (https://sketchfab.com/MatthijsDeRijk)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/models/2ef4c45caa35450db1b876a7f94ff79d\ntitle: Thor and the Midgard Serpent\n*/\n\nimport React from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { draco } from 'drei'\n\nexport default function Model(props) {\n  const { nodes, materials } = useLoader(GLTFLoader, '/scene_draco.glb', draco())\n  return (\n    <group {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <group rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\n            <mesh geometry={nodes.Circle011_EyeFire_0.geometry}>\n              <meshBasicMaterial attach=\"material\" color=\"yellow\" />\n            </mesh>\n            <mesh\n              material={materials.SerpentBake}\n              geometry={nodes.Circle011_SerpentBake_0.geometry}\n              material-metalness={0}\n            />\n          </group>\n          <group position={[-1018.2, -380.5, 1332.6]} rotation={[-1, 0.72, -0.08]} scale={[100, 100, 100]}>\n            <mesh geometry={nodes.Hide003_EyeFire_0.geometry}>\n              <meshBasicMaterial attach=\"material\" color=\"white\" />\n            </mesh>\n            <mesh material={materials.Boat2Bake} geometry={nodes.Hide003_Boat2Bake_0.geometry} />\n          </group>\n          <group position={[349.5, 32.3, 176.6]} rotation={[-1.72, -0.23, -2.64]} scale={[100, 100, 100]}>\n            <mesh geometry={nodes.Keel002_EyeFire_0.geometry}>\n              <meshBasicMaterial attach=\"material\" color=\"white\" />\n            </mesh>\n            <mesh material={materials.Boat1Bake} geometry={nodes.Keel002_Boat1Bake_0.geometry} />\n          </group>\n          <group position={[0, 27, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 170]} />\n          <group rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\n            <mesh material={materials.RockBake} geometry={nodes.Rock021_RockBake_0.geometry} material-metalness={0.5} />\n          </group>\n          <group scale={[100, 100, 100]}>\n            <mesh material={materials.Objects} geometry={nodes.VikingShipObjects001_Objects_0.geometry} />\n            <mesh material={materials.Objects} geometry={nodes.VikingShipObjects001_Objects_0001.geometry} />\n          </group>\n        </group>\n      </group>\n    </group>\n  )\n}\n","import * as THREE from \"three\";\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas, Dom, useFrame } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport Model from \"./Model\";\n\nfunction Rig({ children }) {\n  const outer = useRef();\n  const inner = useRef();\n  useFrame(({ clock }) => {\n    outer.current.position.y = lerp(outer.current.position.y, 0, 0.05);\n    inner.current.rotation.y = Math.sin(clock.getElapsedTime() / 8) * Math.PI;\n    inner.current.position.z = 5 + -Math.sin(clock.getElapsedTime() / 2) * 10;\n    inner.current.position.y = -5 + Math.sin(clock.getElapsedTime() / 2) * 2;\n  });\n  return (\n    <group position={[0, -100, 0]} ref={outer}>\n      <group ref={inner}>{children}</group>\n    </group>\n  );\n}\n\nexport default function App() {\n  return (\n    <Canvas\n      concurrent\n      gl={{ alpha: false }}\n      camera={{ position: [0, 15, 30], fov: 70 }}\n      onCreated={({ gl, camera }) => {\n        camera.lookAt(0, 0, 0);\n        gl.setClearColor(\"#fff0ea\");\n        gl.toneMapping = THREE.Uncharted2ToneMapping;\n      }}\n    >\n      <fog attach=\"fog\" args={[\"#fff0ea\", 10, 60]} />\n      <ambientLight intensity={6} />\n      <Suspense fallback={<Dom center>loading ...</Dom>}>\n        <Rig>\n          <Model />\n          <mesh scale={[1000, 1000, 1]} rotation={[-Math.PI / 2, 0, 0]} onPointerOver={(e) => e.stopPropagation()}>\n            <planeBufferGeometry attach=\"geometry\" />\n            <meshBasicMaterial attach=\"material\" transparent opacity={0.7} color=\"skyblue\" />\n          </mesh>\n        </Rig>\n      </Suspense>\n    </Canvas>\n  );\n}\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}